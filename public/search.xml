<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>王道机试第二章《经典入门》——1.排序</title>
      <link href="/GKNL.github.io/2020/01/30/%E9%81%93%E6%9C%BA%E8%AF%95%E7%AC%AC%E4%BA%8C%E7%AB%A0%E3%80%8A%E7%BB%8F%E5%85%B8%E5%85%A5%E9%97%A8%E3%80%8B%E2%80%94%E2%80%941-%E6%8E%92%E5%BA%8F/"/>
      <url>/GKNL.github.io/2020/01/30/%E9%81%93%E6%9C%BA%E8%AF%95%E7%AC%AC%E4%BA%8C%E7%AB%A0%E3%80%8A%E7%BB%8F%E5%85%B8%E5%85%A5%E9%97%A8%E3%80%8B%E2%80%94%E2%80%941-%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="例2-2-成绩排序"><a href="#例2-2-成绩排序" class="headerlink" title="例2.2 成绩排序"></a>例2.2 成绩排序</h1><blockquote><p><font color=#FF0000 >关键点：使用C++的Sort函数解题(注意重写cmp函数)</font></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//sort函数的两个参数代表待排序内存的起始地址和结束地址</span></span><br><span class="line"><span class="comment">//在此例中起始地址为buf，结束地址为buf+n</span></span><br><span class="line">sort (buf,buf + n);</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="/GKNL.github.io/GKNL.github.io/2020/01/30/%E9%81%93%E6%9C%BA%E8%AF%95%E7%AC%AC%E4%BA%8C%E7%AB%A0%E3%80%8A%E7%BB%8F%E5%85%B8%E5%85%A5%E9%97%A8%E3%80%8B%E2%80%94%E2%80%941-%E6%8E%92/pasted-0.png" alt="玖涯博客"></p><h2 id="C-解法"><a href="#C-解法" class="headerlink" title="C++解法"></a>C++解法</h2><ol><li>解法一：重写cmp()函数<blockquote><p>补充：关于<a href="http://c.biancheng.net/view/1407.html" target="_blank" rel="noopener">C++结构体</a></p></blockquote></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义结构体E</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">101</span>];</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line">E buf[<span class="number">1000</span>];<span class="comment">//声明结构体数组buf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义sort函数的比较规则</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(E a,E b)</span></span>&#123;</span><br><span class="line">    <span class="comment">//按分数升序排序</span></span><br><span class="line">    <span class="keyword">if</span>(a.score != b.score)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.score &lt; b.score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//int strcmp(const char *str1, const char *str2) 把 str1 所指向的字符串和 str2 所指向的字符串进行比较</span></span><br><span class="line">    <span class="comment">//如果返回值 &lt; 0，则表示 str1 小于 str2;如果返回值 &gt; 0，则表示 str1 大于 str2</span></span><br><span class="line">    <span class="comment">//如果返回值=0，则表示str1等于str2</span></span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">strcmp</span>(a.name,b.name);</span><br><span class="line">    <span class="keyword">if</span>(tmp!=<span class="number">0</span>) <span class="keyword">return</span> tmp&lt;<span class="number">0</span>;<span class="comment">//若分数相同，则按名字字典序升序排列(字典序小者在前)</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> a.age &lt; b.age;<span class="comment">//若分数、名字均相同，则按年龄升序排列</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n) != EOF)&#123;</span><br><span class="line">        <span class="comment">//输入并赋值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s%d%d"</span>,buf[i].name,&amp;buf[i].age,&amp;buf[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//使用sort函数进行排序操作(注意第三个参数:cmp函数)</span></span><br><span class="line">        sort(buf,buf+n,cmp);</span><br><span class="line">        <span class="comment">//输出排序后的结果</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s %d %d\n"</span>,buf[i].name,buf[i].age,buf[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上述代码中，如果忽略了第三个参数，那么系统会以不知道排序规则为由（找不到合适的“小于”运算符）而给出编译错误。由此，得到了第二种解法。</p><ol start="2"><li>解法二：重载”&lt;”运算符</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//利用C++算符重载直接定义小于运算符</span></span><br><span class="line"><span class="comment">//注意这里函数的参数：结构体普遍使用引用传递(值传递需要完全地对其进行复制，消耗时间与空间)</span></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> E &amp;b) <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(score != b.score)&#123;</span><br><span class="line">        <span class="keyword">return</span> score &lt; b.score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">strcmp</span>(name,b.name);</span><br><span class="line">    <span class="keyword">if</span>(tmp != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> tmp &lt; <span class="number">0</span>;<span class="comment">//若分数相同，则按名字字典序升序排列(字典序小者在前)</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age&lt;b.age;<span class="comment">//若分数、名字均相同，则按年龄升序排列</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 王道考研机试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机试 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/GKNL.github.io/2020/01/14/hello-world/"/>
      <url>/GKNL.github.io/2020/01/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
